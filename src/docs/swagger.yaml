openapi: 3.0.0
info:
  title: Project Management API
  description: API for managing projects, tasks, and team collaboration
  version: 1.0.0

servers:
  - url: http://localhost:3000/api
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true

    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [active, completed, on-hold]
        ownerId:
          type: string
          format: uuid

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [todo, in-progress, done]
        priority:
          type: string
          enum: [low, medium, high]
        dueDate:
          type: string
          format: date-time
        projectId:
          type: string
          format: uuid
        assignedTo:
          type: string
          format: uuid

paths:
  /users/register:
    post:
      summary: Register a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input

  /users/login:
    post:
      summary: Login user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /projects:
    get:
      summary: Get all projects for current user
      tags: [Projects]
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of projects
        401:
          description: Unauthorized

    post:
      summary: Create a new project
      tags: [Projects]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Project created successfully
        401:
          description: Unauthorized

  /tasks:
    post:
      summary: Create a new task
      tags: [Tasks]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, projectId]
              properties:
                title:
                  type: string
                description:
                  type: string
                projectId:
                  type: string
                  format: uuid
                priority:
                  type: string
                  enum: [low, medium, high]
                dueDate:
                  type: string
                  format: date-time
      responses:
        201:
          description: Task created successfully
        401:
          description: Unauthorized
        403:
          description: Access denied
